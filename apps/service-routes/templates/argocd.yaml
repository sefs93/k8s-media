apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-http-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.dns.zone }}
    #cert-manager.io/issuer: "letsencrypt-staging"
spec:
  rules:
  - host: argocd.{{ .Values.dns.zone }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: http
  tls:
  - hosts:
    - argocd.{{ .Values.dns.zone }}
    #secretName: argocd-tls-secret # do not change, this is provided by Argo CD
    secretName: argocd-secret # do not change, this is provided by Argo CD
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-grpc-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    external-dns.alpha.kubernetes.io/hostname: grpc.argocd.{{ .Values.dns.zone }}
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: https
    host: grpc.argocd.{{ .Values.dns.zone }}
  tls:
  - hosts:
    - grpc.argocd.{{ .Values.dns.zone }}
    secretName: argocd-secret # do not change, this is provided by Argo CD